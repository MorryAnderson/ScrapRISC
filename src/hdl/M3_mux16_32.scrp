module M3_mux16_32 (
    input I_sel[4],
    input I_d0[32],
    input I_d1[32],
    input I_d2[32],
    input I_d3[32],
    input I_d4[32],
    input I_d5[32],
    input I_d6[32],
    input I_d7[32],
    input I_d8[32],
    input I_d9[32],
    input I_d10[32],
    input I_d11[32],
    input I_d12[32],
    input I_d13[32],
    input I_d14[32],
    input I_d15[32],
    output O_q[32]
);


wire sel0_p;
wire sel1_p;
wire sel2_p;
wire sel3_p;

assign sel0_p = {I_sel[0]};
assign sel1_p = {I_sel[1]};
assign sel2_p = {I_sel[2]};
assign sel3_p = {I_sel[3]};

gate sel0_n = not(I_sel[0]);
gate sel1_n = not(I_sel[1]);
gate sel2_n = not(I_sel[2]);
gate sel3_n = not(I_sel[3]);

gate a15 = and(I_d15,sel3_p,sel2_p,sel1_p,sel0_p);
gate a14 = and(I_d14,sel3_p,sel2_p,sel1_p,sel0_n);
gate a13 = and(I_d13,sel3_p,sel2_p,sel1_n,sel0_p);
gate a12 = and(I_d12,sel3_p,sel2_p,sel1_n,sel0_n);
gate a11 = and(I_d11,sel3_p,sel2_n,sel1_p,sel0_p);
gate a10 = and(I_d10,sel3_p,sel2_n,sel1_p,sel0_n);
gate a9  = and(I_d9 ,sel3_p,sel2_n,sel1_n,sel0_p);
gate a8  = and(I_d8 ,sel3_p,sel2_n,sel1_n,sel0_n);
gate a7  = and(I_d7 ,sel3_n,sel2_p,sel1_p,sel0_p);
gate a6  = and(I_d6 ,sel3_n,sel2_p,sel1_p,sel0_n);
gate a5  = and(I_d5 ,sel3_n,sel2_p,sel1_n,sel0_p);
gate a4  = and(I_d4 ,sel3_n,sel2_p,sel1_n,sel0_n);
gate a3  = and(I_d3 ,sel3_n,sel2_n,sel1_p,sel0_p);
gate a2  = and(I_d2 ,sel3_n,sel2_n,sel1_p,sel0_n);
gate a1  = and(I_d1 ,sel3_n,sel2_n,sel1_n,sel0_p);
gate a0  = and(I_d0 ,sel3_n,sel2_n,sel1_n,sel0_n);

gate q = or(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
assign O_q = {q};


place a0     @(0 ,0,0);
place a1     @(1 ,0,0);
place a2     @(2 ,0,0);
place a3     @(3 ,0,0);
place a4     @(4 ,0,0);
place a5     @(5 ,0,0);
place a6     @(6 ,0,0);
place a7     @(7 ,0,0);
place a8     @(8 ,0,0);
place a9     @(9 ,0,0);
place a10    @(10,0,0);
place a11    @(11,0,0);
place a12    @(12,0,0);
place a13    @(13,0,0);
place a14    @(14,0,0);
place a15    @(15,0,0);
place q      @(16,0,0);
place sel0_n @(1,0,32);
place sel1_n @(2,0,32);
place sel2_n @(3,0,32);
place sel3_n @(4,0,32);


endmodule
